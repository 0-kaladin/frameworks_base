page.title=Android SDK
sdk.redirect=0
sdk.version=2.0
sdk.date=October 2009

sdk.win_download=android-sdk-windows_r1.zip
sdk.win_bytes=
sdk.win_checksum=

sdk.mac_download=android-sdk-mac_x86_r1.zip
sdk.mac_bytes=
sdk.mac_checksum=

sdk.linux_download=android-sdk-linux_x86_r1.tgz
sdk.linux_bytes=
sdk.linux_checksum=

@jd:body

<p>For important information about this SDK release, please review the
<a href="{@docRoot}sdk/RELEASENOTES.html">Release Notes</a>.</p>

<div class="special">
<p>The Android SDK has changed! If you've worked with the Android SDK before, you will notice several important differences:</p>

<ul>
<li style="margin-top:.5em">The SDK downloadable package includes <em>only</em> the latest version of the Android SDK Tools.</li>
<li>Once you've installed the SDK, you now use the Android SDK and AVD Manager to download all of the SDK components that you need, such as Android platforms, SDK add-ons, tools, and documentation. </li>
<li>The new approach is modular &mdash; you can install only the components you need and update any or all components without affecting your development environment.</li>
<li>In short, once you've installed the new SDK, you will not need to download an SDK package again. Instead, you will use the Android SDK and AVD Manager to keep your development environment up-to-date. </li>
</ul>

<p>If you are currently using the Android 1.6 SDK, you do not need to install the new SDK, since your existing SDK incudes the Android SDK and AVD Manager tool. To develop against Android 2.0, for example, you could just download the updated SDK Tools (Revision 3) and the Android 2.0 platform into your existing SDK. </p>
</div>

<h2>Quick Start</h2>

<p class="xnote">The steps below provide an overview of how to get started with the Android SDK. For detailed instructions, start with the <a href="{@docRoot}sdk/installing.html">Installing</a> guide. </p>

<p><strong>0. Prepare your development computer</strong></p>

<p>Read the <a href="{@docRoot}sdk/requirements.html">System Requirements</a> document and make sure that your development computer meets the hardware and software requirements for the Android SDK. Install any additional software needed before downloading the Android SDK. In particular, if you plan to develop Android applications in the Eclipse IDE using the ADT Plugin (see below), make sure that you have the correct version of Eclipse installed. 

<p><strong>1. Download and install the SDK starter package</strong></p>

<p>Select a starter package from the table at the top of this page and download it to your development computer. To install the SDK, simply unpack the starter package to a safe location and then add the location to your PATH. </p>

<p><strong>2. Install the ADT Plugin for Eclipse</strong></p>

<p>If you are developing in Eclipse, set up a remote update site and install the Android Development Tools (ADT) plugin. The ADT plugin adds powerful extensions to the Eclipse IDE that help you to create and debug Android applications more easily and faster. If you use Eclipse, ADT gives you an incredible boost in developing Android 
applications. </p>

<p>For detailed instructions, see <a href="{@docRoot}sdk/eclipse-adt.html">Installing and Updating ADT</a>.</p>

<p><strong>3. Download one or more Android platforms</strong></p>

<p>To develop an application, you need to download at least one Android platform component and install it into your SDK. 

<p>Each downloadable platform includes an Android library and system image, as well as emulator skins, sample code and applications, and more. In most cases, you will want to download multiple platforms into your SDK, so that you can build your application on the minimum version you want to support, but test it against higher versions that you intend the application to run on.</p>

<p>While you are downloading platforms, make sure to download the latest documentation package. The documentation covers all versions of the API and lets you filter out those versions that your application won't support. </p>

<p>To download platforms or any other SDK component, use the Android SDK and AVD Manager tool, included in the SDK starter package. For more information, see <a href="{@docRoot}sdk/adding-components.html">Adding SDK Components</a>. Detailed information about individual platforms and other components are provided in the navigation bar at left, under "Downloadable SDK Components."</p>



<p><strong>4. Download other SDK components</strong></p>

<p>In addition to Android platforms, you can also download SDK add-ons and a local version of the Android developer documentation to your SDK environment. </p>

<p>An SDK add-on provides a development environment for an Android external
library or a customized (but fully compliant) Android system image. You can install an add-on if you want to make use of its external library in your application. For example, the Google APIs Add-On lets you develop an application that takes advantage of the Google Maps external library. </p>

<p>Use the Android SDK and AVD Manager tool to download add-ons and other components into your SDK. </p>

<p><strong>5. Get started with an application project</strong></p>

<p>Once you've set up your SDK, the next step is to start a new application project or move existing applications into the new SDK.</p>

<p>If you are new to Android, you can use the <a href="{@docRoot}guide/tutorials/hello-world.html">Hello World</a> tutorial to get started quickly. Welcome!</p>